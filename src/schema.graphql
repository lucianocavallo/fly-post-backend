type Query {
  "Get all users"
  users: [User]
  "Get user by id or email"
  user(id: ID, email: String): User
  "Get all posts"
  posts(userId: ID): [Post]
  "Get post by id"
  post(id: ID!): Post
}

type Mutation {
  "Create user"
  createUser(input: UserInput!): User
  "Update user"
  updateUser(id: ID!, input: UserUpdateInput!): User
  "Remove user"
  removeUser(id: ID!): User
  "Create post"
  createPost(input: PostInput!): Post
  "Update post"
  updatePost(id: ID!, input: PostUpdateInput!): Post
  "Remove post"
  removePost(id: ID!): Post
  "Create comment"
  createComment(input: CommentInput!): Comment
  "Remove comment"
  removeComment(id: ID!): Comment
}

input UserInput {
  email: String!
  username: String!
  password: String!
}

input UserUpdateInput {
  email: String
  username: String
  password: String
}

type User {
  id: ID
  email: String
  username: String
  password: String
  posts: [Post]
}

input PostUpdateInput {
  body: String!
}

input PostInput {
  body: String!
  userId: ID!
}

type Post {
  id: ID
  body: String
  comments: [Comment]
  user: User
  usersLikes: [User]
}

input CommentInput {
  postId: ID
  userId: ID
  comment: String
}

type Comment {
  id: ID
  post: Post
  comment: String
  user: User
}
